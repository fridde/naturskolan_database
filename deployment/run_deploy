#!/bin/bash

SKIP=0
while getopts "s:" opts; do
   case ${opts} in
      s) SKIP=${OPTARG} ;;
   esac
done 

SKIP=$((SKIP -1))

#Variable names
PROJECT_NAME=naturskolan_database
PROJECT_PATH=~/$PROJECT_NAME
TESTING_PATH=~/testing
TESTDB_PATH=$TESTING_PATH/$PROJECT_NAME/tests/_data/test_db.sql
STAGING_PATH=/cygdrive/d/staging
STAGING_PROJECT_PATH=$STAGING_PATH/$PROJECT_NAME
GITHUB_PROJECT=https://github.com/fridde/naturskolan_database.git

if [ $SKIP -lt 1 ]; then
    read -p "[1] Backup DB and export to test-DB..."
    cd $PROJECT_PATH/misc/scripts
	set -x
    php -e export_database.php default > $TESTDB_PATH
	php -e export_database.php test_db > $TESTDB_PATH
    php -e export_database.php just_data > /dev/null
    php -e export_database.php structure > /dev/null
    php -e "$PROJECT_PATH/tests/ods_to_sql.php" >> $TESTDB_PATH
	set +x
    read -p "Delete old files..."
    cd ../SQL_data
    delete_old_files.py
fi

if [ $SKIP -lt 2 ]; then
   read -p "[2] Checking git status of test repo..."
   cd $TESTING_PATH/$PROJECT_NAME
   if [ -n "$(git status -s)" ]; then
       git status
	   read -p 'Proceed if your .gitignore file is configured correctly!'
	   git add -A
       git commit -m 'Continue more testing'
       git push
   fi
   git status
   
   read -p 'Pulling repo changes into dev area...'
   cd $PROJECT_PATH
   git pull

fi

if [ $SKIP -lt 3 ]; then
    read -p '[3] Synchronizing the work in vendor with the toolbox...'
    cd ~    
	filecomparer
	
    cd ~/toolbox
	read -p "Checking git status of each directory in toolbox..."
    gitstatus_dir.py -author fridde --save 
    compare_package_date.py --before
	read -p 'If some repos have to be pushed, use Ctrl+Shift+E to open a new split window.'
	compare_package_date.py
fi

if [ $SKIP -lt 4 ]; then    
	read -p "[4] Updating composer packages in dev directory..."
    cd $PROJECT_PATH
    composer update fridde/*
    composer install
	read -p 'Checking git status of dev repo...'	
    if [ -n "$(git status -s)" ]; then
		git status
		read -p 'Proceed if your .gitignore file is configured correctly!'		
		git add -A
		git commit -m "More work"
		git push
	fi
fi

if [ $SKIP -lt 5 ]; then    
	read -p "[5] Preparing and backing up the test directory..."
	cd $TESTING_PATH
    delete_old_files.py
    quicktar backup_@$(date '+%Y%m%d_%H%M%S').tar $PROJECT_NAME test &
	echo "Wait for rsync to be finished before continuing"
	echo ""
	read -p "Bringing the test directory up to current status (git/composer).[WAIT]"
    cd $PROJECT_NAME
    git pull
    composer install --no-suggest
	read -p "Copying over settings from dev area..."
    cp $PROJECT_PATH/config/settings_{default,test}.yml ./config/
	cp $PROJECT_PATH/config/.key ./config/    
fi

if [ $SKIP -lt 6 ]; then
    read -p "[6] Setting up local testing environment..."    
    cd ~/bin_win
    cmd /C start java -jar selenium-server.jar &
    cmd /C start MailHog.exe &
	read -p "Running the complete test suite..." 
    cd $TESTING_PATH/$PROJECT_NAME    
    ./vendor/bin/codecept run -f --steps
fi

if [ $SKIP -lt 7 ]; then
    echo '[7] Creating the local staging copy...'
    cd $STAGING_PATH    
    quicktar backup_@$(date '+%Y%m%d_%H%M%S').tar $PROJECT_NAME staging
    chmod -R 0777 $PROJECT_NAME && mv $PROJECT_NAME "dir_to_delete"
	rm -rf "dir_to_delete" &
	delete_old_files.py

    git clone --depth 1 $GITHUB_PROJECT
    cd $PROJECT_NAME
    composer install --no-dev --no-suggest --optimize-autoloader --classmap-authoritative 
fi

if [ $SKIP -lt 8 ]; then
	read -p '[8] Copying deployment settings from dev to deploy...'
	cd $STAGING_PROJECT_PATH
    touch .env_prod
    cp {$PROJECT_PATH,$STAGING_PROJECT_PATH}/deployment/deployment.ini
    cp $PROJECT_PATH/config/settings_prod.yml $STAGING_PROJECT_PATH/config/	
	
	read -p 'Uploading the changed files to the remote server...'
    ./vendor/bin/deployment deployment/deployment.ini
fi
